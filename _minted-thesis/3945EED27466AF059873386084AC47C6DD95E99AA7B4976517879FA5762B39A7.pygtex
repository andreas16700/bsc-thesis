\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kd}{static} \PYG{k+kd}{func} \PYG{n+nf}{runOnce}\PYG{p}{(}\PYG{n}{workload}\PYG{p}{:} \PYG{n}{Workload}\PYG{p}{,} \PYG{n}{runner}\PYG{p}{:} \PYG{n}{WorkloadRunner}\PYG{p}{)} \PYG{k}{async} \PYG{k+kr}{throws} \PYG{p}{\PYGZhy{}\PYGZgt{}} \PYG{p}{(}\PYG{n+nb}{String}\PYG{p}{,} \PYG{n}{Duration}\PYG{p}{,} \PYG{n+nb}{Int}\PYG{p}{,} \PYG{n+nb}{Int}\PYG{p}{,} \PYG{p}{[}\PYG{n+nb}{UInt64}\PYG{p}{])} \PYG{p}{\PYGZob{}}
    \PYG{k+kd}{let} \PYG{n+nv}{name} \PYG{p}{=} \PYG{n}{type}\PYG{p}{(}\PYG{n}{of}\PYG{p}{:} \PYG{n}{runner}\PYG{p}{).}\PYG{n}{name}
    \PYG{n+nb+bp}{print}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Setting up servers for \PYGZdq{}}\PYG{p}{,} \PYG{n}{name}\PYG{p}{)}
    \PYG{k}{await} \PYG{n}{setUpServers}\PYG{p}{(}\PYG{k}{for}\PYG{p}{:} \PYG{n}{workload}\PYG{p}{)}
    \PYG{n+nb+bp}{print}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Retrieving source data...\PYGZdq{}}\PYG{p}{)}
    \PYG{k+kd}{let} \PYG{n+nv}{source} \PYG{p}{=} \PYG{k}{await} \PYG{n}{getSourceData}\PYG{p}{()}
    \PYG{n+nb+bp}{print}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Running..\PYGZdq{}}\PYG{p}{)}
    \PYG{k+kd}{var} \PYG{p}{(}\PYG{n}{successes}\PYG{p}{,} \PYG{n}{fails}\PYG{p}{,} \PYG{n}{durations}\PYG{p}{)} \PYG{p}{=} \PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{p}{[}\PYG{n+nb}{UInt64}\PYG{p}{].}\PYG{k+kd}{init}\PYG{p}{(}\PYG{n}{repeating}\PYG{p}{:} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nb+bp}{count}\PYG{p}{:} \PYG{n}{source}\PYG{p}{.}\PYG{n}{psModelsByModelCode}\PYG{p}{.}\PYG{n+nb+bp}{count}\PYG{p}{))}
    \PYG{k+kd}{let} \PYG{n+nv}{duration} \PYG{p}{=} \PYG{k}{try} \PYG{k}{await} \PYG{n}{SuspendingClock}\PYG{p}{().}\PYG{n}{measure} \PYG{p}{\PYGZob{}}
        \PYG{p}{(}\PYG{n}{successes}\PYG{p}{,} \PYG{n}{fails}\PYG{p}{,} \PYG{n}{durations}\PYG{p}{)} \PYG{p}{=} \PYG{k}{try} \PYG{k}{await} \PYG{n}{runner}\PYG{p}{.}\PYG{n}{runSync}\PYG{p}{(}\PYG{n}{sourceData}\PYG{p}{:} \PYG{n}{source}\PYG{p}{)}
    \PYG{p}{\PYGZcb{}}
    \PYG{n+nb+bp}{print}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}}\PYG{l+s+si}{\PYGZbs{}(}\PYG{n}{name}\PYG{l+s+si}{)}\PYG{l+s}{ took }\PYG{l+s+si}{\PYGZbs{}(}\PYG{n}{duration}\PYG{l+s+si}{)}\PYG{l+s}{. Had }\PYG{l+s+si}{\PYGZbs{}(}\PYG{n}{fails}\PYG{l+s+si}{)}\PYG{l+s}{ fails and }\PYG{l+s+si}{\PYGZbs{}(}\PYG{n}{successes}\PYG{l+s+si}{)}\PYG{l+s}{ successes.\PYGZdq{}}\PYG{p}{)}

    \PYG{n+nb+bp}{print}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Resetting servers\PYGZsq{} state..\PYGZdq{}}\PYG{p}{)}
    \PYG{k+kd}{let} \PYG{n+nv}{\PYGZus{}} \PYG{p}{=} \PYG{k}{await} \PYG{n}{runner}\PYG{p}{.}\PYG{n}{psClient}\PYG{p}{.}\PYG{n}{reset}\PYG{p}{()}
    \PYG{k+kd}{let} \PYG{n+nv}{\PYGZus{}} \PYG{p}{=} \PYG{k}{await} \PYG{n}{runner}\PYG{p}{.}\PYG{n}{shClient}\PYG{p}{.}\PYG{n}{reset}\PYG{p}{()}
    \PYG{n+nb+bp}{print}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Reset both servers.\PYGZdq{}}\PYG{p}{)}

    \PYG{k}{return} \PYG{p}{(}\PYG{n}{name}\PYG{p}{,} \PYG{n}{duration}\PYG{p}{,} \PYG{n}{successes}\PYG{p}{,} \PYG{n}{fails}\PYG{p}{,} \PYG{n}{durations}\PYG{p}{)}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
